// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(uuid())
  name           String
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  createdAt      DateTime  @default(now())
  accounts       Account[]
  groups         Group[]
}

model Account {
  id                String   @id @default(uuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@unique([provider, providerAccountId])
}

model Group {
  id        String  @id @default(uuid())
  userId    String
  groupName String
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  posts     Post[]
  categories Category[]
}

model Post {
  id        String      @id @default(uuid())
  title     String
  groupId   String
  group     Group       @relation(fields: [groupId], references: [id], onDelete: Cascade)
  descriptions Description[]
}

model Category {
  id        Int         @id @default(autoincrement())
  name      String
  groupId   String
  group     Group       @relation(fields: [groupId], references: [id])
  descriptions Description[]
}

model Description {
  id          Int       @id @default(autoincrement())
  content     String
  postId      String
  post        Post       @relation(fields: [postId], references: [id], onDelete: Cascade)
  categoryId  Int
  category    Category   @relation(fields: [categoryId], references: [id])
}
